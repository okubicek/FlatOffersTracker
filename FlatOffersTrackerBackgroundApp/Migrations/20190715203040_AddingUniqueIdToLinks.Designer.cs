// <auto-generated />
using System;
using FlatOffersTrackerBackgroundApp.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlatOffersTrackerBackgroundApp.Migrations
{
    [DbContext(typeof(FlatOffersDbContext))]
    [Migration("20190715203040_AddingUniqueIdToLinks")]
    partial class AddingUniqueIdToLinks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlatOffersTracker.Entities.ExecutionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeFinished");

                    b.Property<DateTime>("DateTimeStarted");

                    b.Property<bool>("Success");

                    b.HasKey("Id");

                    b.ToTable("ExecutionHistory");
                });

            modelBuilder.Entity("FlatOffersTracker.Entities.FlatOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime?>("DateRemoved");

                    b.Property<int>("FlatSize");

                    b.Property<int>("FlatType");

                    b.Property<int>("NumberOfRooms");

                    b.Property<decimal>("Price");

                    b.Property<bool>("Removed");

                    b.HasKey("Id");

                    b.ToTable("FlatOffers");
                });

            modelBuilder.Entity("FlatOffersTracker.Entities.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FlatOfferId");

                    b.Property<int>("UniqueId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("FlatOfferId");

                    b.ToTable("FlatOffersLinks");
                });

            modelBuilder.Entity("FlatOffersTracker.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FlatOfferId");

                    b.Property<int>("Type");

                    b.Property<bool>("Viewed");

                    b.HasKey("Id");

                    b.HasIndex("FlatOfferId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FlatOffersTracker.Entities.Link", b =>
                {
                    b.HasOne("FlatOffersTracker.Entities.FlatOffer", "FlatOffer")
                        .WithMany("Links")
                        .HasForeignKey("FlatOfferId");
                });

            modelBuilder.Entity("FlatOffersTracker.Entities.Notification", b =>
                {
                    b.HasOne("FlatOffersTracker.Entities.FlatOffer", "FlatOffer")
                        .WithMany("Notifications")
                        .HasForeignKey("FlatOfferId");
                });
#pragma warning restore 612, 618
        }
    }
}
